extends layout

block content
  h1= title
  h2 Test
  h3 More Testing
  h4 more more testing
  table(style="border: 2px solid #494")
    tr
      td Status
      td(style="color:red; font-weight: 900px;")#update
    tr
      td User
      td#id
    tr
      td Name
      td#user
    tr
      td Location
      td#location

  p Welcome to #{title}
    button.buttonLeft(onclick="moveLeft()") LEFT
    button.buttonRight(onclick="moveRight()") RIGHT
    button.buttonRight(onclick="moveUp()") UP
    button.buttonRight(onclick="moveDown()") DOWN

    button.buttonReset(onclick="reset()") RESET

    div#timageHolder
      canvas#canvas(width='600', height='600' style='border:3px solid #000;')



  script.
    var socket = io('http://192.168.1.130:3006');
    var image;
    var c = document.getElementById("timage");
    var ctx = document.getElementById('canvas').getContext("2d");
    var up = document.getElementById("update");
    var id = document.getElementById("id");
    var loc = document.getElementById("location");
    var puser = document.getElementById("user");
    var holder = document.getElementById("timageHolder");

    socket.on('loop',function(data){
        console.log('User Connected: ',data.roomData)
        console.log('Socket ',socket);
        // image = data.data;
        var img = new Image();
        img.src = 'data:image/jpeg;base64,' + data.data;
        ctx.drawImage(img,0,0);

        if(data != undefined || data != null){
          up.innerHTML = "Connected ";
          id.innerHTML = ""+socket.id;
          loc.innerHTML = [data.roomData.playerLoc.posX, data.roomData.playerLoc.posY];
          if(data.roomData.playerData.id == socket.id) {
              var userName = data.roomData.playerData.name;
              puser.innerHTML = "" + userName;
              console.log("Name: ", userName);
          }
      }else{
        up.innerHTML = "Server Down..";
      }


    });

    socket.emit('test2',{data:5});
    console.log(socket);

    function moveRight(){
      console.log("RIGHT");
      socket.emit('move',{
        msg: "Moving "+socket.id+" Right",
        dir: [0,+1],
        id:socket.id,
      });
    }

    function moveLeft(){
      console.log("LEFT");
      socket.emit('move',{
        msg: "Moving "+socket.id+" Left",
        dir:[0,-1],
        id:socket.id,
      });
    }

    function moveUp(){
      console.log("Up");
      socket.emit('move',{
        msg: "Moving "+socket.id+" Up",
        dir:[-1,0],
        id:socket.id,
      });
    }

    function moveDown(){
      console.log("Down");
      socket.emit('move',{
        msg: "Moving "+socket.id+" Down",
        dir:[+1,0],
        id:socket.id,
      });
    }


    function reset(){
        console.log("RESET");
        socket.emit('reset',{data: 'reseting'});
        socket.on('reset complete',function(data){
          console.log('Reset Complete', data)
          image = data.data;
          c.removeAttribute('src');
          c.setAttribute('src',image)
          holder.insertAdjacentHTML('afterend','<img src='+image+'>')

          up.innerHTML = "Reset Mode.."

        })

    }
